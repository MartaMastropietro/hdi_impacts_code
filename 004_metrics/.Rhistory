rm(list=ls())
### function for performing panel crossvalidation:
cross_validation_fixest_1year = function (data_dem, f, y){
data_train<-data_dem[ data_dem$year <y, ]
data_test<-data_dem[ data_dem$year ==y, ]
m_cross_val <- fixest::feols(f, data_train)
pred<-predict(m_cross_val, data_test)
return (sqrt(sum((data_test[[o]]-pred)^2)/length(pred)))
}
cross_validation_fixest_3year = function (data_dem, f, y){
# data_train<-data_dem[ data_dem$year <y, ]
# data_test<-data_dem[ data_dem$year ==y, ]
# m_cross_val <- fixest::feols(f, data_train)
# pred<-predict(m_cross_val, data_test)
# e1= (sqrt(sum((data_test[[o]]-pred)^2)/length(pred)))
#
# data_train<-data_dem[ data_dem$year <(y-1), ]
# data_test<-data_dem[ data_dem$year >=(y-1), ]
# m_cross_val <- fixest::feols(f, data_train)
# pred<-predict(m_cross_val, data_test)
# e2= (sqrt(sum((data_test[[o]]-pred)^2)/length(pred)))
data_train<-data_dem[ data_dem$year != (y-2), ]
data_test<-data_dem[ data_dem$year ==(y-2), ]
m_cross_val <- fixest::feols(f, data_train)
pred<-predict(m_cross_val, data_test)
e3= (sqrt(sum((data_test[[o]]-pred)^2)/length(pred)))
r<-e3
return(r)
}
cross_validation_fixest = function (data_dem, f, y, nmax){
e<-list()
years<-unique(data_dem$year)
for (y in (nmax+1):length(years)){
data_train<-data_dem[ data_dem$year !=years[y], ]
data_test<-data_dem[ data_dem$year ==years[y], ]
m_cross_val <- fixest::feols(f, data_train)
pred<-predict(m_cross_val, data_test)
e[[length(e)+1]]<-sqrt(mean((data_test[[o]]-pred)^2, na.rm=TRUE))
}
err= sqrt(mean((unlist(e)^2), na.rm=TRUE))
return(err)
}
# xlsx write
require(openxlsx)
# libraries parallel
library(parallel)
library(foreach)
library(doParallel)
library(fixest)
library(modelsummary)
# libraries needed
library(dplyr)
library(readr)
library(ggplot2)
# parallelize
cores=detectCores()
cl <- makeCluster(cores[1]-1) # locale
#cl <- makeCluster(cores[1]) # zeus
data<- read_csv("output/data_hdi_climate_gdl_pop_weight_1990_2021.csv")
